# -*- mode: emacs-lisp -*-
# key: template
# name: Template (my skeleton for various LaTeX documents)
# type: command
# --
;; Snippet format: <https://capitaomorte.github.io/yasnippet/snippet-development.html>.

;; Useful LaTeX links:
;;   * Nice font combinations: <http://tex.stackexchange.com/questions/9533/what-best-combination-of-fonts-for-serif-sans-and-mono-do-you-recommend>.
;;   * Some style tips: <http://tex.stackexchange.com/questions/82376/why-are-these-commands-considered-as-bad-practice>.

(require 'cl-lib) ; Used: cl-flet.
(let* ((yas-good-grace nil) ; Don't catch errors.
       (engine (completing-read "TeX engine: "
                                '("XeTeX" "pdfTeX")
                                nil nil nil nil "XeTeX"))
       (document-class (completing-read "Document class: "
                                        '("article" "scrartcl" "amsart" "letter")
                                        nil nil nil nil "article"))
       (engine-auctex (pcase engine
                        ("XeTeX" "xetex")
                        ("pdfTeX" "default")))
       (document-body "`yas-selected-text`$0"))
  (cl-flet* ((smart-comment (line)
                            (if (or (string-prefix-p "%" line)
                                    (string-empty-p line))
                                line
                              (concat "%" line)))
             (join-lines (function lines)
                         (let ((non-nil-lines (delq nil lines)))
                           (when non-nil-lines
                             (mapconcat function non-nil-lines "\n"))))
             (latex-block (transformation &rest lines)
                          (pcase transformation
                            (`ignore nil)
                            (`smart-comment (join-lines #'smart-comment lines))
                            (`comment (join-lines (lambda (line) (concat "%" line)) lines))
                            (`verbatim (join-lines #'identity lines))))
             (verbatim-block (&rest lines)
                             (apply #'latex-block 'verbatim lines)))
    (yas-expand-snippet
     (verbatim-block

      ;; Warnings.
      "\\RequirePackage[l2tabu, orthodox]{nag} % Warn about obsolete macros in .log file (grep for \"nag\")."
      ""

      ;; Document type, margins, etc.
      (pcase document-class
        ("scrartcl"
         "\\documentclass[12pt, a4paper, parskip=full]{scrartcl} % Margins: DIV=<number> (larger number: more content).")
        ((or "article" "amsart" "letter")
         (concat "\\documentclass[12pt]{" document-class "}"))
        (_
         (concat "\\documentclass{" document-class "}")))
      (when (not (equal document-class "scrartcl"))
        (verbatim-block "\\usepackage[a4paper]{geometry} % Setting margins: \"top=5cm\", \"left=2in\" (later options have more priority)."
                        "\\usepackage{parskip} % Space between paragraphs instead of indent."))
      "\\usepackage{microtype} % Better typography." ; No longer needs to be loaded after fonts and babel (unless using "babel=true"). See <http://tex.stackexchange.com/questions/162137/loading-microtype-before-or-after-the-font>.
      ""

      "% Language."
      (if (equal engine "XeTeX")
          (verbatim-block "\\usepackage{polyglossia}" ; Just to be safe, load it near the beginning of the preamble (see <http://tex.stackexchange.com/questions/150788/should-babel-package-call-be-placed-at-the-end-of-the-preamble>).
                          "\\setmainlanguage{${polish}}"
                          "\\setotherlanguage{${english}}")
        (verbatim-block "\\usepackage[${polish},${english}]{babel}"))
      (when (equal engine "pdfTeX")
        (verbatim-block "\\usepackage[utf8]{inputenc}"
                        "\\usepackage[T1]{fontenc}"))
      ""

      "% Math."
      (latex-block 'smart-comment
                   "\\usepackage[all]{onlyamsmath} % Add improved math macros, disable standard ones."
                   "\\usepackage{amsfonts} % Math fonts, e.g. \\`mathbb'."
                   "")

      "% Tables."
      ;; Overview of table packages: <http://tex.stackexchange.com/questions/12672/which-tabular-packages-do-which-tasks-and-which-packages-conflict>.
      (latex-block 'smart-comment
                   "\\usepackage{tabu} % \\`tabular' replacement with more features (e.g. auto-detecting if inside math mode)."
                   "\\usepackage{booktabs} % Professional-looking tables (use \\\\{top,mid,bottom}rule instead of \\hline; no \\vline)." ; `booktabs' examples: <http://www.howtotex.com/packages/improve-your-tables-with-booktabs/>.
                   "")

      ;; Disable page numbers?
      (latex-block (if (equal document-class "letter") 'verbatim 'smart-comment)
                   "\\pagestyle{empty} % No page numbers."
                   "")

      ;; Title, author, etc.
      (pcase document-class
        ("letter" (verbatim-block "\\signature{${`(user-full-name)`}}"
                                  "\\address{${}}"))
        (_ (verbatim-block "\\title{${Document title}}"
                           "\\author{${`(user-full-name)`}}"
                           "%\\date{}")))
      ""

      ;; Document body.
      "\\begin{document}"
      (pcase document-class
        ("letter" (verbatim-block "\\begin{letter}{${Destination address}}"
                                  "\\opening{${Dear Sir or Madam,}}"
                                  ""
                                  document-body
                                  ""
                                  "\\closing{Yours Respectfully,}"
                                  "\\end{letter}"))
        (_ (verbatim-block "\\maketitle"
                           ""
                           document-body)))
      "\\end{document}"
      ""

      ;; AUCTeX data.
      (when engine-auctex
        (verbatim-block "% Local Variables:"
                        (concat "% TeX-engine: " engine-auctex)
                        "% End:"
                        ""))))))
